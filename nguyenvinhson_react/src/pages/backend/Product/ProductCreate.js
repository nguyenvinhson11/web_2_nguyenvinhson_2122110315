import React, { useState, useEffect } from "react";
import { useNavigate, Link } from "react-router-dom";
import CategoryService from "../../../services/CategoryService";
import BrandService from "../../../services/BrandService";
import ProductService from "../../../services/ProductService";

const ProductCreate = () => {
  const navigate = useNavigate();

  // form state
  const [name, setName] = useState("");
  const [price, setPrice] = useState("");
  const [priceSale, setPriceSale] = useState("");
  const [description, setDescription] = useState("");
  const [categoryId, setCategoryId] = useState("");
  const [brandId, setBrandId] = useState("");
  const [thumbnailFile, setThumbnailFile] = useState(null);
  const [error, setError] = useState("");

  // dropdown data
  const [categories, setCategories] = useState([]);
  const [brands, setBrands] = useState([]);

  useEffect(() => {
    // load categories v√† brands khi m·ªü form
    (async () => {
      try {
        const cats = await CategoryService.index();
        setCategories(cats );
        const brs = await BrandService.index();
        setBrands(brs); // n·∫øu tr·∫£ v·ªÅ $values ho·∫∑c m·∫£ng tr·ª±c ti·∫øp
      } catch (err) {
        console.error("L·ªói t·∫£i danh m·ª•c/brand:", err);
      }
    })();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    if (!name || !price || !categoryId || !brandId) {
      setError("Vui l√≤ng ƒëi·ªÅn ƒë·ªß c√°c tr∆∞·ªùng b·∫Øt bu·ªôc.");
      return;
    }

    try {
      const formData = new FormData();
      formData.append("Name", name);
      formData.append("Price", price);
      if (priceSale)     formData.append("PriceSale", priceSale);
      if (description)   formData.append("Description", description);
      formData.append("CategoryId", categoryId);
      formData.append("BrandId", brandId);
      if (thumbnailFile) formData.append("ThumbnailFile", thumbnailFile);

      await ProductService.create(formData);
      alert("T·∫°o s·∫£n ph·∫©m th√†nh c√¥ng!");
      navigate("/admin/product");
    } catch (err) {
      console.error("L·ªói khi t·∫°o s·∫£n ph·∫©m:", err);
      setError("C√≥ l·ªói x·∫£y ra, th·ª≠ l·∫°i sau.");
    }
  };

  return (
    <div className="p-6 max-w-3xl mx-auto bg-white rounded-xl shadow">
    {/* Ti√™u ƒë·ªÅ & N√∫t h√†nh ƒë·ªông */}
    <div className="flex justify-between items-center mb-6">
      <h1 className="text-2xl font-extrabold text-green-700 uppercase tracking-wide">
        üõçÔ∏è Th√™m s·∫£n ph·∫©m
      </h1>
      <div className="flex gap-3">
        <button
          type="submit"
          form="productForm"
          className="bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded shadow"
        >
          üíæ L∆∞u
        </button>
        <Link
          to="/admin/product"
          className="bg-gray-500 hover:bg-gray-600 text-white font-semibold px-4 py-2 rounded shadow"
        >
          ‚ùå H·ªßy
        </Link>
      </div>
    </div>
  
    {/* Hi·ªÉn th·ªã l·ªói n·∫øu c√≥ */}
    {error && (
      <div className="mb-4 text-red-600 font-medium">
        {error}
      </div>
    )}
  
    {/* Form nh·∫≠p li·ªáu */}
    <form id="productForm" onSubmit={handleSubmit} encType="multipart/form-data">
      {/* T√™n s·∫£n ph·∫©m */}
      <div className="mb-4">
        <label className="block mb-1 font-semibold text-gray-700">
          T√™n s·∫£n ph·∫©m <span className="text-red-500">*</span>
        </label>
        <input
          type="text"
          className="w-full border rounded p-2"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
      </div>
  
      {/* Gi√° g·ªëc & Khuy·∫øn m√£i */}
      <div className="grid grid-cols-2 gap-4 mb-4">
        <div>
          <label className="block mb-1 font-semibold text-gray-700">Gi√° g·ªëc <span className="text-red-500">*</span></label>
          <input
            type="number"
            className="w-full border rounded p-2"
            value={price}
            onChange={(e) => setPrice(e.target.value)}
            required
          />
        </div>
        <div>
          <label className="block mb-1 font-semibold text-gray-700">Gi√° khuy·∫øn m√£i</label>
          <input
            type="number"
            className="w-full border rounded p-2"
            value={priceSale}
            onChange={(e) => setPriceSale(e.target.value)}
          />
        </div>
      </div>
  
      {/* M√¥ t·∫£ */}
      <div className="mb-4">
        <label className="block mb-1 font-semibold text-gray-700">M√¥ t·∫£</label>
        <textarea
          className="w-full border rounded p-2"
          rows="4"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
        />
      </div>
  
      {/* Danh m·ª•c & Th∆∞∆°ng hi·ªáu */}
      <div className="grid grid-cols-2 gap-4 mb-4">
        <div>
          <label className="block mb-1 font-semibold text-gray-700">
            Danh m·ª•c <span className="text-red-500">*</span>
          </label>
          <select
            className="w-full border rounded p-2"
            value={categoryId}
            onChange={(e) => setCategoryId(e.target.value)}
            required
          >
            <option value="">-- Ch·ªçn danh m·ª•c --</option>
            {categories.map((c) => (
              <option key={c.id} value={c.id}>{c.name}</option>
            ))}
          </select>
        </div>
        <div>
          <label className="block mb-1 font-semibold text-gray-700">
            Th∆∞∆°ng hi·ªáu <span className="text-red-500">*</span>
          </label>
          <select
            className="w-full border rounded p-2"
            value={brandId}
            onChange={(e) => setBrandId(e.target.value)}
            required
          >
            <option value="">-- Ch·ªçn th∆∞∆°ng hi·ªáu --</option>
            {brands.map((b) => (
              <option key={b.id} value={b.id}>{b.name}</option>
            ))}
          </select>
        </div>
      </div>
  
      {/* ·∫¢nh thumbnail */}
      <div className="mb-4">
        <label className="block mb-1 font-semibold text-gray-700">·∫¢nh thumbnail</label>
        <input
          type="file"
          accept="image/*"
          onChange={(e) => setThumbnailFile(e.target.files[0])}
        />
      </div>
    </form>
  </div>
  
  );
};

export default ProductCreate;
